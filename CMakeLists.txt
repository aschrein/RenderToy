cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
cmake_policy(VERSION 2.8)

set(NAME GRAPHICS_EXPERIMENTS)
include_directories(3rdparty)
include_directories(src)
project(${NAME})

find_package(Vulkan REQUIRED)
find_package(glfw3 3.3 REQUIRED)
IF (NOT Vulkan_FOUND)
    find_library(Vulkan_LIBRARY NAMES vulkan HINTS "$ENV{VULKAN_SDK}/lib" "${CMAKE_SOURCE_DIR}/libs/vulkan" REQUIRED)
    IF (Vulkan_LIBRARY)
        set(Vulkan_FOUND ON)
        MESSAGE("Using bundled Vulkan library version")
    ENDIF()
ENDIF()

IF (NOT Vulkan_FOUND)
	message(FATAL_ERROR "Could not find Vulkan library!")
ELSE()
	message(STATUS ${Vulkan_LIBRARY})
ENDIF()

add_definitions(-D_CRT_SECURE_NO_WARNINGS -fpermissive)
set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
# add_definitions(-std=c++17)
set(SPIRV_CROSS_SHARED ON)
add_subdirectory(3rdparty/SPIRV-Cross)

file(GLOB SOURCE "src/*.cpp" 3rdparty/imgui/imgui.cpp 3rdparty/imgui/imgui_widgets.cpp 3rdparty/imgui/imgui_draw.cpp 3rdparty/imgui/imgui_demo.cpp 3rdparty/imgui/examples/imgui_impl_vulkan.cpp 3rdparty/imgui/examples/imgui_impl_glfw.cpp)
# file(GLOB 3RD_SOURCE 3rdparty/SPIRV-Reflect/spirv_reflect.c)
message(${SOURCE})
# message(${SOURCE})
add_executable(GRAPHICS_EXPERIMENTS main.cpp ${SOURCE} ${3RD_SOURCE})
target_include_directories(GRAPHICS_EXPERIMENTS PRIVATE ${Vulkan_INCLUDE_DIRS} 3rdparty/imgui)
target_link_libraries(GRAPHICS_EXPERIMENTS ${Vulkan_LIBRARY} glfw glslang gtest spirv-cross-reflect spirv-cross-core spirv-cross-c spirv-cross-util)
target_link_libraries(GRAPHICS_EXPERIMENTS PRIVATE shaderc_shared)

add_executable(test_0 tests/test_0.cpp ${SOURCE} ${3RD_SOURCE})
target_include_directories(test_0 PRIVATE ${Vulkan_INCLUDE_DIRS} 3rdparty/imgui)
target_link_libraries(test_0 ${Vulkan_LIBRARY} glfw glslang gtest spirv-cross-reflect spirv-cross-core spirv-cross-c spirv-cross-util)
target_link_libraries(test_0 PRIVATE shaderc_shared)

add_executable(test_1 tests/test_1.cpp ${SOURCE} ${3RD_SOURCE})
target_include_directories(test_1 PRIVATE ${Vulkan_INCLUDE_DIRS} 3rdparty/imgui)
target_link_libraries(test_1 ${Vulkan_LIBRARY} glfw glslang gtest spirv-cross-reflect spirv-cross-core spirv-cross-c spirv-cross-util)
target_link_libraries(test_1 PRIVATE shaderc_shared)
